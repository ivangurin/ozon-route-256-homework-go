syntax = "proto3";

package route256.ozon.ru.project.loms.pkg.api.order.v1;

option go_package = "route256.ozon.ru/project/loms/pkg/api/order/v1;order";

import "google/protobuf/empty.proto";
import "validate/validate.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "Order API";
        version: "1.0.0";
    };
    schemes: HTTP;
    schemes: HTTPS;
    consumes: "application/json";
    produces: "application/json";
    security_definitions: {
        security: {
            key: "x-auth";
            value: {
            type: TYPE_API_KEY;
            in: IN_HEADER;
            name: "authorization";
            }
        }
    }
};

service Order {
    rpc Create (CreateRequest) returns (CreateResponse) {
        option (google.api.http) = {
            post: "/v1/order/create"
            body: "*"
        };
    }

    rpc Info (InfoRequest) returns (InfoResponse) {
        option (google.api.http) = {
            get: "/v1/order/info/{order_id}"
        };
    }

    rpc Pay (PayRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/order/pay"
            body: "*"
        };
    }

    rpc Cancel (CancelRequest) returns (google.protobuf.Empty) {
        option (google.api.http) = {
            post: "/v1/order/cancel"
            body: "*"
        };
    }
}

message CreateRequest {
    message Item{
        int64 sku = 1 [json_name = "sku", (validate.rules).int64.gte = 0];
        int64 count = 2 [json_name = "count", (validate.rules).int64.gte = 0];
    }

    int64 user = 1 [json_name = "user", (validate.rules).int64.gte = 0];
    repeated Item items = 2 [json_name = "items", (validate.rules).repeated = {min_items:1}];
}

message CreateResponse{
    int64 order_id = 1 [json_name = "order_id"];
}

message InfoRequest {
    int64 order_id = 1 [json_name = "order_id", (validate.rules).int64.gte = 0];
}

message InfoResponse {
    message Item{
        int64 sku = 1 [json_name = "sku"];
        int64 count = 2 [json_name = "count"];
    }

    string status = 1 [json_name = "status"];
    int64 user = 2 [json_name = "user"];
    repeated Item items = 3 [json_name = "items"];
}

message PayRequest{
    int64 order_id = 1 [json_name = "order_id", (validate.rules).int64.gte = 0];
}

message CancelRequest{
    int64 order_id = 1 [json_name = "order_id", (validate.rules).int64.gte = 0];
}
